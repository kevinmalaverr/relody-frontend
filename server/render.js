import React from 'react'
import { renderToString } from 'react-dom/server'
import { Provider } from 'react-redux'
import { createStore } from 'redux'
import { renderRoutes } from 'react-router-config'
import { StaticRouter } from 'react-router-dom'
import serverRoutes from '../src/serverRoutes'
import reducer from '../src/redux/reducer'
import initialState from '../initialState.json'
import { ChunkExtractor } from '@loadable/server'

// This is the stats file generated by webpack loadable plugin
const statsFile = `${__dirname}/public/loadable-stats.json`
// We create an extractor from the statsFile
const extractor = new ChunkExtractor({ statsFile })
// Wrap your application using "collectChunks"

const setResponse = (html, preloadedState) => {
  return (/* html */`
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
        <link rel="stylesheet" href="assets/app.css" type="text/css">
      </head>
      <body>
        <div id="app">${html}</div>
        <script>
          window.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(/</g, '\\u003c')}
        </script>
        <script src="assets/app.js" type="text/javascript"></script>
      </body>
    </html>
  `)
}

/**
 * express middleware
 * @param {*} req
 * @param {*} res
 */
export const renderApp = (req, res) => {
  const store = createStore(reducer, initialState)
  const preloadedState = store.getState()
  const html = renderToString(
    extractor.collectChunks(
      <Provider store={store}>
        <StaticRouter location={req.url} context={{}}>
          {renderRoutes(serverRoutes)}
        </StaticRouter>
      </Provider>
    )
  )
  res.send(setResponse(html, preloadedState))
}
